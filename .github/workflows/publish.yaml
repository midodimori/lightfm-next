name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install UV
        uses: astral-sh/setup-uv@v3
        
      - name: Sync dependencies
        run: uv sync --extra dev
        
      - name: Build source distribution
        run: uv run python -m build --sdist
        
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest]
    steps:
      - uses: actions/checkout@v4
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_BUILD: "cp312-* cp313-*"
          CIBW_SKIP: "pp*"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_DEPENDENCY_VERSIONS: "latest"
          CIBW_BUILD_VERBOSITY: 2
          
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  combine-artifacts:
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Combine all distributions
        run: |
          mkdir dist
          find artifacts -name "*.whl" -exec cp {} dist/ \;
          find artifacts -name "*.tar.gz" -exec cp {} dist/ \;
          ls -la dist/
          
      - name: Install UV
        uses: astral-sh/setup-uv@v3
        
      - name: Check packages
        run: |
          uv tool install twine
          uv tool run twine check dist/*
          
      - name: Upload combined artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    needs: combine-artifacts
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
