name: LightFM-Next test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install UV
        uses: astral-sh/setup-uv@v3
        
      - name: Sync dependencies with UV
        run: uv sync --extra dev --extra lint
        
      - name: Lint with flake8
        run: |
          uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv,build,dist
          uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=.venv,build,dist
          
      - name: Build extensions
        run: uv run python setup.py build_ext --inplace
        
      - name: Test with pytest
        run: uv run pytest tests/ -v --timeout=300
        
      - name: Test basic functionality
        run: |
          uv run python -c "
          import lightfm
          print('LightFM version:', lightfm.__version__)
          from lightfm import LightFM
          from lightfm.data import Dataset
          dataset = Dataset()
          dataset.fit(['user1', 'user2'], ['item1', 'item2'])
          interactions, _ = dataset.build_interactions([('user1', 'item1'), ('user2', 'item2')])
          model = LightFM()
          model.fit(interactions, epochs=1, verbose=False)
          print('âœ… Basic functionality test passed')
          "
