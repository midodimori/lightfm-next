name: Create Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install UV
        uses: astral-sh/setup-uv@v3
        
      - name: Sync dependencies
        run: uv sync --extra dev --extra lint
        
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Commit uv.lock changes if any
        run: |
          if git diff --quiet uv.lock; then
            echo "No changes to uv.lock"
          else
            echo "Committing uv.lock changes"
            git add uv.lock
            git commit -m "Update uv.lock for release preparation"
          fi
          
      - name: Run tests before release
        run: make test-all
        
      - name: Bump version
        run: uv run bump2version ${{ github.event.inputs.version_type }}
        
      - name: Get new version
        id: version
        run: echo "version=$(uv run python -c 'from lightfm.version import __version__; print(__version__)')" >> $GITHUB_OUTPUT
        
      - name: Build packages
        run: make build-dist
        
      - name: Push changes and tags
        run: |
          git push origin master
          git push origin --tags
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## What's Changed
            
            Automated release v${{ steps.version.outputs.version }}
            
            ### Installation
            ```bash
            pip install lightfm-next==${{ steps.version.outputs.version }}
            ```
            
            ### Compatibility
            - Python 3.8+
            - Compatible with original LightFM API
            - Supports Python 3.12+ (main improvement over original)
          draft: false
          prerelease: false
          
      - name: Trigger PyPI Publication
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'publish.yaml',
              ref: 'master'
            })